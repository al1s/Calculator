{"version":3,"sources":["script.js"],"names":["solver","init","this","brackets","left","right","getActionProp","bind","precedence","associativity","fn","topElm","getRPN","solveRPN","action","actionProps","^","*","parseInput","/","+","-","actionFuncs","x","y","Math","pow","%","prop","keys","isOperator","item","Object","includes","isNumber","Number","isInteger","isDecimalPoint","toLocaleString","stack","slice","expression","_this","console","log","actionStack","reduce","acc","ndx","length","result","push","pop","reverse","RPNexpression","_this2","operands","splice","a","b","queue","inputArr","_this3","isBracket","join","parsedExpression","inputProcessor","mapKeyToChr","buttonToChrMapping","btnPerc","btnDiv","btn7","btn8","btn4","btn9","btnMult","btn5","btn6","btnSub","btn1","btn2","btn3","btnAdd","btnPower","btnDecimalPoint","btnEqual","btnId","btnLBr","values","insertAtCaret","areaId","text","txtarea","focus","document","querySelector","br","selectionStart","selection","scrollPos","strPos","createRange","range","value","moveStart","back","substring","front","ieRange","moveEnd","select","setSelectionRange","navigator","vibrateOnTouch","vibrate","msVibrate","outputChr","chrToInsert","e","preventDefault","target","id","getInputValue","inputId","clearInput","preventVirtualKbd","getElementById","type","filterCalcInput","allowedSymbols","currentValue","key","delPrevChr","substr","getResultOnEqual","processKbdEntry","parsedString","calcResult","listen","querySelectorAll","btn","addEventListener","inputElm","_this4","forEach","calculator","assign"],"mappings":"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","file":"script.js","sourcesContent":["/* eslint no-var: 0 */\n/* eslint vars-on-top: 0 */\n/* eslint prefer-const: 0 */\n/* eslint arrow-parens: 0 */\n\n// https://medium.freecodecamp.org/parsing-math-expressions-with-javascript-7e8f5572276e\n\n// TODO: add exception handler for not matched brackets;\n// TODO: put app in compliance with A11y requirements;\n\n// 5 + ((1 + 2) × 4) − 3\n// 5 1 2 + 4 * + 3 -\n// 512+4*+3-\n\n// 3 + 4 * 2 / ( 1 - 5 ) ^ 2 ^ 3\n// 3 4 2 × 1 5 − 2 3 ^ ^ ÷ +\n// 342*15-23^^/+\n\n// ((5 - 1 )* 2 + ((1 + 2) × 4)) * 3\n// 51-2*12+4*+3*\nvar solver = {\n  init() {\n    this.brackets = {\n      left: '(',\n      right: ')',\n    };\n    this.getActionProp = this.getActionProp.bind(this);\n    this.precedence = this.precedence.bind(this);\n    this.associativity = this.associativity.bind(this);\n    this.fn = this.fn.bind(this);\n    this.topElm = this.topElm.bind(this);\n    this.getRPN = this.getRPN.bind(this);\n    this.solveRPN = this.solveRPN.bind(this);\n    this.parseInput = this.parseInput.bind(this);\n  },\n\n  getActionProp(action, prop) {\n    var actionProps = {\n      '^': [4, 'right'],\n      '*': [3, 'left'],\n      '/': [3, 'left'],\n      '%': [3, 'left'],\n      '+': [2, 'left'],\n      '-': [2, 'left'],\n    };\n    var actionFuncs = {\n      '^': (x, y) => x ** y,\n      '*': (x, y) => x * y,\n      '/': (x, y) => x / y,\n      '%': (x, y) => x % y,\n      '+': (x, y) => x + y,\n      '-': (x, y) => x - y,\n    };\n    switch (prop) {\n      case 'precedence':\n        return actionProps[action] ? actionProps[action][0] : 0;\n      case 'associativity':\n        return actionProps[action] ? actionProps[action][1] : 'left';\n      case 'fn':\n        return actionFuncs[action];\n      default:\n        return Object.keys(actionProps);\n    }\n  },\n\n  precedence(action) {\n    return this.getActionProp(action, 'precedence');\n  },\n\n  associativity(action) {\n    return this.getActionProp(action, 'associativity');\n  },\n\n  fn(action) {\n    return this.getActionProp(action, 'fn');\n  },\n\n  isOperator(item) {\n    return this.getActionProp().includes(item);\n  },\n\n  isBracket(item) {\n    return Object.values(this.brackets).includes(item);\n  },\n\n  isNumber(item) {\n    return Number.isInteger(Number(item));\n  },\n\n  isDecimalPoint(item) {\n    var n = '1.1';\n    return /^1(.+)1$/.exec(n.toLocaleString())[1] === item;\n  },\n\n  topElm(stack) {\n    return stack.slice(-1)[0];\n  },\n\n  getRPN(expression) {\n    // console.clear();\n    console.log(expression);\n    var actionStack = [];\n    // var inputArr = [...expression];\n    var result = expression.reduce((acc, item, ndx) => {\n      console.log(`action: ${item}`);\n      if (\n        !this.getActionProp().includes(item) &&\n        (item !== this.brackets.left && item !== this.brackets.right)\n      ) {\n        acc.push(Number(item));\n      } else if (this.getActionProp().includes(item)) {\n        console.log(`actionStackTop: ${this.topElm(actionStack)}`);\n        while (\n          actionStack.length > 0 &&\n          (this.precedence(this.topElm(actionStack)) > this.precedence(item) ||\n            (this.precedence(this.topElm(actionStack)) ===\n              this.precedence(item) &&\n              this.associativity(item) === 'left')) &&\n          this.topElm(actionStack) !== this.brackets.left\n        ) {\n          acc.push(actionStack.pop());\n        }\n        actionStack.push(item);\n      } else if (item === this.brackets.left) actionStack.push(item);\n      else if (item === this.brackets.right) {\n        console.log(`actionStackTop: ${this.topElm(actionStack)}`);\n        while (this.topElm(actionStack) !== this.brackets.left) {\n          acc.push(actionStack.pop());\n        }\n        actionStack.pop();\n      }\n      if (expression.length - 1 === ndx && actionStack.length !== 0) {\n        acc.push(...actionStack.reverse());\n      }\n      console.log(actionStack);\n      console.log(acc);\n      return acc;\n    }, []);\n    return result;\n  },\n\n  solveRPN(RPNexpression) {\n    var operands = [];\n    RPNexpression.forEach(item => {\n      if (!this.getActionProp().includes(item)) {\n        operands.push(Number(item));\n      } else {\n        var action = this.fn(item);\n        var [a, b] = operands.splice(operands.length - 2, 2);\n        operands.push(action(a, b));\n      }\n    });\n    return operands[0];\n  },\n\n  parseInput(expression) {\n    var queue = [];\n    var inputArr = [...expression];\n    var parsedExpression = inputArr.reduce((acc, item, ndx) => {\n      if (this.isOperator(item) || this.isBracket(item)) {\n        if (queue.length > 0) {\n          acc.push(queue.join(''));\n          queue = [];\n        }\n        acc.push(item);\n      } else if (this.isNumber(item) || this.isDecimalPoint(item)) {\n        queue.push(item);\n      }\n      if (inputArr.length - 1 === ndx && queue.length > 0) {\n        acc.push(queue.join(''));\n      }\n      return acc;\n    }, []);\n    return parsedExpression;\n  },\n};\n\nvar inputProcessor = {\n  mapKeyToChr(btnId) {\n    var buttonToChrMapping = {\n      btnPerc: '%',\n      btnDiv: '/',\n      btn7: '7',\n      btn8: '8',\n      btn9: '9',\n      btnMult: '*',\n      btn4: '4',\n      btn5: '5',\n      btn6: '6',\n      btnSub: '-',\n      btn1: '1',\n      btn2: '2',\n      btn3: '3',\n      btnAdd: '+',\n      btnPower: '^',\n      btn0: '0',\n      btnDecimalPoint: '.',\n      btnEqual: '=',\n      btnLBr: '(',\n      btnRBr: ')',\n      Enter: 'Enter',\n      Backspace: 'Backspace',\n    };\n    return btnId\n      ? buttonToChrMapping[btnId]\n      : Object.values(buttonToChrMapping);\n  },\n\n  // from here - https://stackoverflow.com/a/1064139\n  insertAtCaret(areaId, text) {\n    var txtarea = document.querySelector(`#${areaId}`);\n    txtarea.focus();\n    if (!txtarea) {\n      return;\n    }\n\n    var scrollPos = txtarea.scrollTop;\n    var strPos = 0;\n    var br =\n      txtarea.selectionStart || txtarea.selectionStart == '0'\n        ? 'ff'\n        : document.selection ? 'ie' : false;\n    if (br === 'ie') {\n      txtarea.focus();\n      var range = document.selection.createRange();\n      range.moveStart('character', -txtarea.value.length);\n      strPos = range.text.length;\n    } else if (br === 'ff') {\n      strPos = txtarea.selectionStart;\n    }\n\n    var front = txtarea.value.substring(0, strPos);\n    var back = txtarea.value.substring(strPos, txtarea.value.length);\n    txtarea.value = front + text + back;\n    strPos += text.length;\n    // console.log(`output length: ${strPos}, text: ${text}`);\n    if (br === 'ie') {\n      txtarea.focus();\n      var ieRange = document.selection.createRange();\n      ieRange.moveStart('character', -txtarea.value.length);\n      ieRange.moveStart('character', strPos);\n      ieRange.moveEnd('character', 0);\n      ieRange.select();\n    } else if (br === 'ff') {\n      txtarea.selectionStart = strPos;\n      txtarea.selectionEnd = strPos;\n      txtarea.setSelectionRange(strPos, strPos);\n      txtarea.focus();\n    }\n\n    txtarea.scrollTop = scrollPos;\n  },\n\n  vibrateOnTouch() {\n    if ('vibrate' in navigator) {\n      navigator.vibrate =\n        navigator.vibrate ||\n        navigator.webkitVibrate ||\n        navigator.mozVibrate ||\n        navigator.msVibrate;\n      navigator.vibrate(30);\n    }\n  },\n\n  outputChr(e) {\n    // console.log(e);\n    this.vibrateOnTouch();\n    var chrToInsert = this.mapKeyToChr(e.target.id);\n    this.insertAtCaret('calc_input', chrToInsert);\n    e.preventDefault();\n  },\n\n  getInputValue(inputId) {\n    return document.querySelector(`#${inputId}`).value;\n  },\n\n  clearInput(e) {\n    // console.log(e);\n    this.vibrateOnTouch();\n    var inputElm = document.getElementById('calc_input');\n    inputElm.value = '';\n    if (e) e.preventDefault();\n  },\n\n  preventVirtualKbd(e) {\n    // console.log(e);\n    if (e.type === 'click') {\n      e.target.removeAttribute('readonly');\n    } else {\n      e.preventDefault();\n    }\n  },\n\n  filterCalcInput(e) {\n    var allowedSymbols = this.mapKeyToChr();\n    if (!allowedSymbols.includes(e.key)) {\n      e.preventDefault();\n    }\n  },\n\n  delPrevChr(e) {\n    var currentValue = this.getInputValue('calc_input');\n    currentValue = currentValue.substr(0, currentValue.length - 1);\n    this.clearInput(e);\n    this.insertAtCaret('calc_input', currentValue);\n    e.preventDefault();\n  },\n\n  processKbdEntry(e) {\n    // console.log(e);\n    if (e.key === '=') {\n      e.preventDefault();\n      this.getResultOnEqual();\n    } else this.filterCalcInput(e);\n  },\n\n  calcResult() {\n    var currentValue = this.getInputValue('calc_input');\n    // console.log(currentValue);\n    // // currentValue = currentValue.substr(0, currentValue.length - 1);\n    // console.log(currentValue);\n    var parsedString = this.parseInput(currentValue);\n    var RPNexpression = this.getRPN(parsedString);\n    return this.solveRPN(RPNexpression);\n  },\n\n  getResultOnEqual(e) {\n    this.vibrateOnTouch();\n    // we can't put cursor in the right position for numbers in input field, so convert explicitly\n    var result = String(this.calcResult());\n    // console.log(result);\n    this.clearInput(e);\n    this.insertAtCaret('calc_input', result);\n  },\n\n  listen() {\n    this.getResultOnEqual = this.getResultOnEqual.bind(this);\n    this.getInputValue = this.getInputValue.bind(this);\n    this.delPrevChr = this.delPrevChr.bind(this);\n    this.filterCalcInput = this.filterCalcInput.bind(this);\n    this.preventVirtualKbd = this.preventVirtualKbd.bind(this);\n    this.clearInput = this.clearInput.bind(this);\n    this.outputChr = this.outputChr.bind(this);\n    this.insertAtCaret = this.insertAtCaret.bind(this);\n    this.mapKeyToChr = this.mapKeyToChr.bind(this);\n    this.calcResult = this.calcResult.bind(this);\n    this.processKbdEntry = this.processKbdEntry.bind(this);\n    this.vibrateOnTouch = this.vibrateOnTouch.bind(this);\n\n    document.querySelectorAll('.btn').forEach(btn => {\n      if (btn.id === 'btnC') {\n        btn.addEventListener('click', this.clearInput);\n      } else if (btn.id === 'btnDel') {\n        btn.addEventListener('click', this.delPrevChr);\n      } else if (btn.id === 'btnEqual') {\n        btn.addEventListener('click', this.getResultOnEqual);\n      } else btn.addEventListener('click', this.outputChr);\n    });\n\n    var inputElm = document.querySelector('#calc_input');\n    ['click', 'touchend'].forEach(e =>\n      inputElm.addEventListener(e, this.preventVirtualKbd),\n    );\n    // inputElm.addEventListener('click touchend', this.detectMouse);\n    // inputElm.addEventListener('touchend', this.detectMouse);\n    ['keydown', 'input'].forEach(e =>\n      inputElm.addEventListener(e, this.processKbdEntry),\n    );\n    // inputElm.addEventListener('keydown', this.processChrEntry filterCalcInput);\n    // inputElm.addEventListener('input', this.getResultOnEqual); // put handler into previous keyDown\n  },\n};\n\n// var string = '5+((1+2)*4)-3';\n// var string = '3+4*2/(1-5)^2^3';\nvar calculator = Object.assign({}, solver, inputProcessor);\ncalculator.init();\ncalculator.listen();\n// var string = '((5-1)*2+((1+2)*4))*3';\n// var parsedString = calcEngine.parseInput(string);\n// var RPNexpression = calcEngine.getRPN(parsedString);\n// console.log(calcEngine.solveRPN(RPNexpression));\n"],"sourceRoot":"/source/"}